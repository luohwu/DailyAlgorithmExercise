# https://leetcode.com/problems/number-of-islands/

from collections import deque
from typing import List


class Solution:
    def numIslands(self, grid: List[List[str]]) -> int:
        num_islands=0
        m=len(grid)
        n=len(grid[0])
        visit=[[0]*n for r in range(m)]
        for r in range(m):
            for c in range(n):
                print(r,c)
                if visit[r][c]==0 and grid[r][c]=='1':
                    visit[r][c] = 1
                    num_islands+=1
                    #start exploring from here
                    queue=deque([[r,c]])
                    while queue:
                        cur_r,cur_c=queue.popleft()
                        # print(cur_r, cur_c)
                        for move_r,move_c in [[-1,0],[0,1],[1,0],[0,-1]]:
                            new_r,new_c=cur_r+move_r,cur_c+move_c
                            if new_r>-1 and new_r<m and\
                                    new_c>-1 and new_c<n and \
                                    grid[new_r][new_c]=='1' and visit[new_r][new_c]==0:
                                queue.append([new_r,new_c])
                                visit[new_r][new_c]=1
                visit[r][c] = 1
        return num_islands







if __name__=='__main__':
    grid=[["1","1","1","1","1","0","1","1","1","1","1","1","1","1","1","0","1","0","1","1"],["0","1","1","1","1","1","1","1","1","1","1","1","1","0","1","1","1","1","1","0"],["1","0","1","1","1","0","0","1","1","0","1","1","1","1","1","1","1","1","1","1"],["1","1","1","1","0","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"],["1","0","0","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"],["1","0","1","1","1","1","1","1","0","1","1","1","0","1","1","1","0","1","1","1"],["0","1","1","1","1","1","1","1","1","1","1","1","0","1","1","0","1","1","1","1"],["1","1","1","1","1","1","1","1","1","1","1","1","0","1","1","1","1","0","1","1"],["1","1","1","1","1","1","1","1","1","1","0","1","1","1","1","1","1","1","1","1"],["1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"],["0","1","1","1","1","1","1","1","0","1","1","1","1","1","1","1","1","1","1","1"],["1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"],["1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"],["1","1","1","1","1","0","1","1","1","1","1","1","1","0","1","1","1","1","1","1"],["1","0","1","1","1","1","1","0","1","1","1","0","1","1","1","1","0","1","1","1"],["1","1","1","1","1","1","1","1","1","1","1","1","0","1","1","1","1","1","1","0"],["1","1","1","1","1","1","1","1","1","1","1","1","1","0","1","1","1","1","0","0"],["1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"],["1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"],["1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"]]
    print(Solution().numIslands(grid=grid))